{"version":3,"sources":["app/routes.js","features/topics/topicsSlice.js","features/quizzes/quizzesSlice.js","features/cards/cardSlice.js","app/store.js","components/NewQuizForm.js","data/icons.js","components/NewTopicForm.js","features/topics/Topics.js","features/topics/Topic.js","features/cards/Card.js","features/quizzes/Quiz.js","features/quizzes/Quizzes.js","app/App.js","index.js"],"names":["ROUTES","newQuizRoute","quizRoute","id","quizzesRoute","newTopicRoute","topicRoute","topicsRoute","topics","name","initialState","reducers","addTopic","state","action","newTopic","payload","icon","quizIds","addQuizFromTopic","topicId","push","topicsSlice","createSlice","topicReducer","reducer","actions","selectTopics","quizzes","addQuiz","newQuiz","cardIds","quizzesSlice","quizzesReducer","selectQuizzes","cards","addCard","newCard","front","back","cardsSlice","cardsReducer","selectCards","store","configureStore","NewQuizForm","useState","setName","setCards","setTopicId","history","useHistory","useSelector","updateCardState","index","side","value","newCards","slice","onSubmit","e","preventDefault","length","map","card","cardId","uuidv4","dispatch","console","log","target","a","onChange","currentTarget","placeholder","Object","values","topic","className","onClick","filter","i","removeCard","concat","ALL_ICONS","url","NewTopicForm","setIcon","inputName","inputIcon","type","required","defaultValue","disabled","hidden","Topics","to","src","alt","Topic","useParams","quizzesForTopic","quizId","quiz","Card","flipped","setFlipped","Quizzes","App","activeClassName","path","TopicsRoutes","QuizRoutes","match","useRouteMatch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bf8254e.chunk.js","sourcesContent":["const ROUTES = {\n  newQuizRoute: () => \"/quizzes/new\",\n  quizRoute: (id) => `/quizzes/${id}`,\n  quizzesRoute: () => \"/quizzes\",\n  newTopicRoute: () => \"/topics/new\",\n  topicRoute: (id) => `/topics/${id}`,\n  topicsRoute: () => \"/topics\",\n};\n\nexport default ROUTES;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst topics = {\r\n  name: \"topics\",\r\n  initialState: {\r\n    topics: {}\r\n  },\r\n  reducers: {\r\n    addTopic: (state, action) => {\r\n      const newTopic = {\r\n        id: action.payload.id,\r\n        name: action.payload.name,\r\n        icon: action.payload.icon,\r\n        quizIds: []\r\n      };\r\n      state.topics = { ...state.topics, [newTopic.id]: newTopic };\r\n    },\r\n    addQuizFromTopic: (state, action) => {\r\n      state.topics[action.payload.topicId].quizIds.push(action.payload.id);\r\n    }\r\n  }\r\n};\r\n\r\nconst topicsSlice = createSlice(topics);\r\n//Required for the creation of the store:\r\nexport const topicReducer = topicsSlice.reducer;\r\n//Required for create actions\r\nexport const { addTopic, addQuizFromTopic } = topicsSlice.actions;\r\n//Required for access the State\r\nexport const selectTopics = (state) => state.topics.topics;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { addQuizFromTopic } from \"../topics/topicsSlice\";\r\n\r\nconst quizzes = {\r\n  name: \"quizzes\",\r\n  initialState: {\r\n    quizzes: {\r\n    }\r\n  },\r\n  reducers: {\r\n    addQuiz: (state, action) => {\r\n      const newQuiz = {\r\n        id: action.payload.id,\r\n        name: action.payload.name,\r\n        topicId: action.payload.topicId,\r\n        cardIds: action.payload.cardIds\r\n      };\r\n      state.quizzes = { ...state.quizzes, [newQuiz.id]: newQuiz };\r\n    }\r\n  }\r\n};\r\n\r\nconst quizzesSlice = createSlice(quizzes);\r\n//For the creation of the store\r\nexport const quizzesReducer = quizzesSlice.reducer;\r\n//Required for create an action\r\nexport const { addQuiz } = quizzesSlice.actions;\r\n// Thunk required for async operation\r\nexport const addQuizTopic = (payload) => {\r\n  return async (dispatch) => {\r\n    await dispatch(addQuiz(payload));\r\n    dispatch(addQuizFromTopic(payload));\r\n  };\r\n};\r\n//Required for acces the state\r\nexport const selectQuizzes = (state) => state.quizzes.quizzes;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cards = {\r\n  name: \"cards\",\r\n  initialState: {\r\n    cards: {}\r\n  },\r\n  reducers: {\r\n    addCard: (state, action) => {\r\n      const newCard = {\r\n        id: action.payload.id,\r\n        front: action.payload.front,\r\n        back: action.payload.back\r\n      };\r\n      state.cards = { ...state.cards, [newCard.id]: newCard };\r\n    }\r\n  }\r\n};\r\n\r\nconst cardsSlice = createSlice(cards);\r\n//For the creation in the store:\r\nexport const cardsReducer = cardsSlice.reducer;\r\n// For an action creator\r\nexport const { addCard } = cardsSlice.actions;\r\n// For accessing the state:\r\nexport const selectCards = (state) => state.cards.cards;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { topicReducer } from \"../features/topics/topicsSlice\";\r\nimport { quizzesReducer } from \"../features/quizzes/quizzesSlice\";\r\nimport { cardsReducer } from \"../features/cards/cardSlice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    topics: topicReducer,\r\n    quizzes: quizzesReducer,\r\n    cards: cardsReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ROUTES from \"../app/routes\";\r\nimport { selectTopics } from \"../features/topics/topicsSlice\";\r\nimport { addQuizTopic, addQuiz } from \"../features/quizzes/quizzesSlice\";\r\nimport { addCard } from \"../features/cards/cardSlice\";\r\nimport store from \"../app/store\";\r\n\r\nexport default function NewQuizForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [cards, setCards] = useState([]);\r\n  const [topicId, setTopicId] = useState(\"\");\r\n  const history = useHistory();\r\n  const topics = useSelector(selectTopics);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (name.length === 0) {\r\n      return;\r\n    }\r\n    const cardIds = [];\r\n    // create the new cards here and add each card's id to cardIds\r\n    // create the new quiz here\r\n    cards.map((card) => {\r\n      const cardId = uuidv4();\r\n      cardIds.push(cardId);\r\n      store.dispatch(\r\n        addCard({ id: cardId, front: card.front, back: card.back })\r\n      );\r\n    });\r\n    console.log(cardIds);\r\n    const newQuiz = {\r\n      id: uuidv4(),\r\n      name: e.target[0].value,\r\n      topicId: e.target[1].value,\r\n      cardIds: cardIds,\r\n    };\r\n    store.dispatch(addQuizTopic(newQuiz));\r\n    history.push(ROUTES.quizzesRoute());\r\n  };\r\n\r\n  const addCardInputs = (e) => {\r\n    e.preventDefault();\r\n    setCards(cards.concat({ front: \"\", back: \"\" }));\r\n  };\r\n\r\n  const removeCard = (e, index) => {\r\n    e.preventDefault();\r\n    setCards(cards.filter((card, i) => index !== i));\r\n  };\r\n\r\n  const updateCardState = (index, side, value) => {\r\n    const newCards = cards.slice();\r\n    newCards[index][side] = value;\r\n    setCards(newCards);\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <h1>Create a new quiz</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          id=\"quiz-name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.currentTarget.value)}\r\n          placeholder=\"Quiz Title\"\r\n        />\r\n        <select\r\n          id=\"quiz-topic\"\r\n          onChange={(e) => setTopicId(e.currentTarget.value)}\r\n          placeholder=\"Topic\"\r\n        >\r\n          <option value=\"\">Topic</option>\r\n          {Object.values(topics).map((topic) => (\r\n            <option key={topic.id} value={topic.id}>\r\n              {topic.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {cards.map((card, index) => (\r\n          <div key={index} className=\"card-front-back\">\r\n            <input\r\n              id={`card-front-${index}`}\r\n              value={cards[index].front}\r\n              onChange={(e) =>\r\n                updateCardState(index, \"front\", e.currentTarget.value)\r\n              }\r\n              placeholder=\"Front\"\r\n            />\r\n\r\n            <input\r\n              id={`card-back-${index}`}\r\n              value={cards[index].back}\r\n              onChange={(e) =>\r\n                updateCardState(index, \"back\", e.currentTarget.value)\r\n              }\r\n              placeholder=\"Back\"\r\n            />\r\n\r\n            <button\r\n              onClick={(e) => removeCard(e, index)}\r\n              className=\"remove-card-button\"\r\n            >\r\n              Remove Card\r\n            </button>\r\n          </div>\r\n        ))}\r\n        <div className=\"actions-container\">\r\n          <button onClick={addCardInputs}>Add a Card</button>\r\n          <button>Create Quiz</button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n","export const BOOK_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/book.svg\";\nexport const BALLOON_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/balloon.svg\";\nexport const BIRD_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/bird.svg\";\nexport const CALENDAR_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/calendar.svg\";\nexport const CLOVER_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/clover.svg\";\nexport const CRAYONS_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/crayons.svg\";\nexport const DATA_FLOW_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/data-flow.svg\";\nexport const FENCE_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/fence.svg\";\nexport const GRILL_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/grill.svg\";\nexport const HAND_DRILL_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/hand-drill.svg\";\nexport const HAT_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/hat.svg\";\nexport const INTERNET_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/internet.svg\";\nexport const LADYBUG_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/ladybug.svg\";\nexport const LEAVES_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/leaves.svg\";\nexport const MEDICINE_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/medicine.svg\";\nexport const NEST_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/nest.svg\";\nexport const SHUTTLECOCK_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/shuttlecock.svg\";\nexport const SPADE_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/spade.svg\";\nexport const STATISTICS_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/statistics.svg\";\nexport const SUN_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/sun.svg\";\nexport const TREE_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/tree.svg\";\n\nexport const ALL_ICONS = [\n  {\n    url: BOOK_ICON,\n    name: \"Book\",\n  },\n  {\n    url: BALLOON_ICON,\n    name: \"Balloon\",\n  },\n  {\n    url: BIRD_ICON,\n    name: \"Bird\",\n  },\n  {\n    url: CALENDAR_ICON,\n    name: \"Calendar\",\n  },\n  {\n    url: CLOVER_ICON,\n    name: \"Clover\",\n  },\n  {\n    url: CRAYONS_ICON,\n    name: \"Crayons\",\n  },\n  {\n    url: DATA_FLOW_ICON,\n    name: \"Data\",\n  },\n  {\n    url: FENCE_ICON,\n    name: \"Fence\",\n  },\n  {\n    url: GRILL_ICON,\n    name: \"Grill\",\n  },\n  {\n    url: HAND_DRILL_ICON,\n    name: \"Hand\",\n  },\n  {\n    url: HAT_ICON,\n    name: \"Hat\",\n  },\n  {\n    url: INTERNET_ICON,\n    name: \"Internet\",\n  },\n  {\n    url: LADYBUG_ICON,\n    name: \"Ladybug\",\n  },\n  {\n    url: LEAVES_ICON,\n    name: \"Leaves\",\n  },\n  {\n    url: MEDICINE_ICON,\n    name: \"Medicine\",\n  },\n  {\n    url: NEST_ICON,\n    name: \"Nest\",\n  },\n  {\n    url: SHUTTLECOCK_ICON,\n    name: \"Shuttlecock\",\n  },\n  {\n    url: SPADE_ICON,\n    name: \"Spade\",\n  },\n  {\n    url: STATISTICS_ICON,\n    name: \"Statistics\",\n  },\n  {\n    url: SUN_ICON,\n    name: \"Sun\",\n  },\n  {\n    url: TREE_ICON,\n    name: \"Tree\",\n  },\n];\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport store from \"../app/store\";\nimport { addTopic, selectTopics } from \"../features/topics/topicsSlice\";\nimport ROUTES from \"../app/routes\";\nimport { ALL_ICONS } from \"../data/icons\";\n\nexport default function NewTopicForm() {\n  const [name, setName] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.length === 0) {\n      return;\n    }\n    const inputId = uuidv4();\n    const inputName = e.target[0].value;\n    const inputIcon = e.target[1].value;\n    store.dispatch(\n      addTopic({ id: uuidv4(), name: inputName, icon: inputIcon })\n    );\n    history.push(ROUTES.topicsRoute());\n  };\n\n  return (\n    <section>\n      <form onSubmit={handleSubmit}>\n        <h1 className=\"center\">Create a new topic</h1>\n        <div className=\"form-section\">\n          <input\n            id=\"topic-name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.currentTarget.value)}\n            placeholder=\"Topic Name\"\n          />\n          <select\n            onChange={(e) => setIcon(e.currentTarget.value)}\n            required\n            defaultValue=\"default\"\n          >\n            <option value=\"default\" disabled hidden>\n              Choose an icon\n            </option>\n            {ALL_ICONS.map(({ name, url }) => (\n              <option key={url} value={url}>\n                {name}\n              </option>\n            ))}\n          </select>\n        </div>\n        <button className=\"center\">Add Topic</button>\n      </form>\n    </section>\n  );\n}\n","import NewTopicForm from \"../../components/NewTopicForm\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectTopics } from \"./topicsSlice\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ROUTES from \"../../app/routes\";\r\n\r\n\r\nexport default function Topics() {\r\n  const topics = useSelector(selectTopics);\r\n  return (\r\n    <section className=\"center\">\r\n      <h1>Topics</h1>\r\n      <ul className=\"topics-list\">\r\n        {Object.values(topics).map((topic) => (\r\n          <li className=\"topic\" key={topic.id}>\r\n            <Link to={ROUTES.topicRoute(topic.id)} className=\"topic-link\">\r\n              <div className=\"topic-container\">\r\n                <img src={topic.icon} alt=\"\" />\r\n                <div className=\"text-content\">\r\n                  <h2>{topic.name}</h2>\r\n                  <p>{topic.quizIds.length} Quizzes</p>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <Link\r\n        to={ROUTES.newTopicRoute()}\r\n        className=\"button create-new-topic-button\"\r\n      >\r\n        Create New Topic\r\n      </Link>\r\n    </section>\r\n  );\r\n}\r\n","import NewTopicForm from \"../../components/NewTopicForm\";\nimport { Link, useParams } from \"react-router-dom\";\nimport ROUTES from \"../../app/routes\";\n\nexport default function Topic() {\n  const topics = {}; // replace this with a call to your selector to select all the topics in state\n  const quizzes = {}; // replace this with a call to your selector to select all the quizzes in state\n  let { topicId } = useParams();\n  const topic = topics[topicId];\n  const quizzesForTopic = topic.quizIds.map((quizId) => quizzes[quizId]);\n\n  return (\n    <section>\n      <img src={topic.icon} alt=\"\" className=\"topic-icon\" />\n      <h1>Topic: {topic.name}</h1>\n      <ul className=\"quizzes-list\">\n        {quizzesForTopic.map((quiz) => (\n          <li className=\"quiz\" key={quiz.id}>\n            <Link to={ROUTES.quizRoute(quiz.id)}>{quiz.name}</Link>\n          </li>\n        ))}\n      </ul>\n      <Link to=\"/quizzes/new\" className=\"button center\">\n        Create a New Quiz\n      </Link>\n    </section>\n  );\n}\n","import React, { useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { selectCards } from \"./cardSlice\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function Card({ id }) {\r\n  const cards = useSelector(selectCards); // replace this with a call to your selector to get all the cards in state\r\n  const card = cards[id];\r\n  const [flipped, setFlipped] = useState(false);\r\n\r\n  return (\r\n    <li>\r\n      <button className=\"card\" onClick={(e) => setFlipped(!flipped)}>\r\n        {flipped ? card.back : card.front}\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n","import { Link, useParams } from \"react-router-dom\";\r\nimport Card from \"../cards/Card\";\r\nimport ROUTES from \"../../app/routes\";\r\nimport { selectQuizzes } from \"./quizzesSlice\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function Topic() {\r\n  const quizzes = useSelector(selectQuizzes); // replace this with a call to your selector to get all the quizzes in state\r\n  let { quizId } = useParams();\r\n  const quiz = quizzes[quizId];\r\n\r\n  return (\r\n    <section>\r\n      <h1>{quiz.name}</h1>\r\n      <ul className=\"cards-list\">\r\n        {quiz.cardIds.map((id) => (\r\n          <Card key={id} id={id} />\r\n        ))}\r\n      </ul>\r\n      <Link to={ROUTES.newQuizRoute()} className=\"button center\">\r\n        Create a New Quiz\r\n      </Link>\r\n    </section>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport ROUTES from \"../../app/routes\";\r\nimport { selectQuizzes } from \"./quizzesSlice\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function Quizzes() {\r\n  const quizzes = useSelector(selectQuizzes); // replace this with a call to your selector to get all the quizzes in state\r\n  return (\r\n    <section className=\"center\">\r\n      <h1>Quizzes</h1>\r\n      <ul className=\"quizzes-list\">\r\n        {Object.values(quizzes).map((quiz) => (\r\n          <Link key={quiz.id} to={ROUTES.quizRoute(quiz.id)}>\r\n            <li className=\"quiz\">{quiz.name}</li>\r\n          </Link>\r\n        ))}\r\n      </ul>\r\n      <Link to={ROUTES.newQuizRoute()} className=\"button\">\r\n        Create New Quiz\r\n      </Link>\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  NavLink,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport NewQuizForm from \"../components/NewQuizForm\";\r\nimport NewTopicForm from \"../components/NewTopicForm\";\r\nimport Topics from \"../features/topics/Topics\";\r\nimport Topic from \"../features/topics/Topic\";\r\nimport Quiz from \"../features/quizzes/Quiz\";\r\nimport Quizzes from \"../features/quizzes/Quizzes\";\r\nimport ROUTES from \"./routes\";\r\nimport { topicsSlice } from \"../features/topics/topicsSlice\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <NavLink to={ROUTES.topicsRoute()} activeClassName=\"active\">\r\n              Topics\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to={ROUTES.quizzesRoute()} activeClassName=\"active\">\r\n              Quizzes\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to={ROUTES.newQuizRoute()} activeClassName=\"active\">\r\n              New Quiz\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n\r\n      <Switch>\r\n        <Route path=\"/topics\">\r\n          <TopicsRoutes />\r\n        </Route>\r\n        <Route path=\"/quizzes\">\r\n          <QuizRoutes />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction TopicsRoutes() {\r\n  let match = useRouteMatch();\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path={`${match.path}/new`}>\r\n          <NewTopicForm />\r\n        </Route>\r\n        <Route path={`${match.path}/:topicId`}>\r\n          <Topic />\r\n        </Route>\r\n        <Route path={`${match.path}`}>\r\n          <Topics />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction QuizRoutes() {\r\n  let match = useRouteMatch();\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path={`${match.path}/new`}>\r\n          <NewQuizForm />\r\n        </Route>\r\n        <Route path={`${match.path}/:quizId`}>\r\n          <Quiz />\r\n        </Route>\r\n        <Route path={`${match.path}`}>\r\n          <Quizzes />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./app/App\";\nimport store from \"./app/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}